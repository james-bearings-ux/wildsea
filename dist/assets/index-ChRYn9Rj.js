(function(){const a=document.createElement("link").relList;if(a&&a.supports&&a.supports("modulepreload"))return;for(const n of document.querySelectorAll('link[rel="modulepreload"]'))s(n);new MutationObserver(n=>{for(const i of n)if(i.type==="childList")for(const r of i.addedNodes)r.tagName==="LINK"&&r.rel==="modulepreload"&&s(r)}).observe(document,{childList:!0,subtree:!0});function t(n){const i={};return n.integrity&&(i.integrity=n.integrity),n.referrerPolicy&&(i.referrerPolicy=n.referrerPolicy),n.crossOrigin==="use-credentials"?i.credentials="include":n.crossOrigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function s(n){if(n.ep)return;n.ep=!0;const i=t(n);fetch(n.href,i)}})();let W={};async function se(){try{const[e,a,t,s]=await Promise.all([fetch("data/game-constants.json").then(n=>n.json()),fetch("data/aspects.json").then(n=>n.json()),fetch("data/resources.json").then(n=>n.json()),fetch("data/ship-parts.json").then(n=>n.json())]);return W={...e,aspects:a,startingResources:t,shipParts:s},!0}catch(e){return console.error("Failed to load game data:",e),!1}}function A(){return W}const y={aspects:4,edges:3,skillPoints:8,resources:6,maxAspectsAdvancement:7};function _(){return Date.now().toString(36)+Math.random().toString(36).substr(2)}function K(e="Character Name",a="Tzelicrae",t="Ridgeback",s="Mesmer"){return{id:_(),mode:"creation",name:e,bloodline:a,origin:t,post:s,selectedAspects:[],selectedEdges:[],skills:{},languages:{"Low Sour":3},milestones:[],drives:["","",""],mires:[{text:"",checkbox1:!1,checkbox2:!1},{text:"",checkbox1:!1,checkbox2:!1},{text:"",checkbox1:!1,checkbox2:!1}],resources:{charts:[],salvage:[],specimens:[],whispers:[]}}}function j(e){const a=localStorage.getItem(`wildsea-character-${e}`);if(a)try{return JSON.parse(a)}catch(t){console.error(`Failed to load character ${e}:`,t)}return null}function f(e){localStorage.setItem(`wildsea-character-${e.id}`,JSON.stringify(e))}function ie(e){localStorage.removeItem(`wildsea-character-${e}`)}let b={id:_(),mode:"creation",name:"Character Name",bloodline:"Tzelicrae",origin:"Ridgeback",post:"Mesmer",selectedAspects:[],selectedEdges:["Sharps","Instinct","Teeth"],skills:{Break:2,Concoct:2,Scavenge:2,Wavewalk:2},languages:{"Low Sour":3},milestones:[],drives:["Send other spirits to a peaceful rest","Reconnect with your friends and family","Help those suffering from great distraction"],mires:[{text:"Your material control wavers erratically",checkbox1:!1,checkbox2:!1},{text:"Visions of your past death are difficult to banish",checkbox1:!1,checkbox2:!1},{text:"Your own thoughts are cloudy, mercurial",checkbox1:!1,checkbox2:!1}],resources:{charts:[{id:"001",name:"A Sketch of Shadowed Paths"}],salvage:[{id:"004",name:"Old Memento"},{id:"005",name:"Broken Locket"}],specimens:[{id:"007",name:"Glowing Plasm"},{id:"008",name:"Spectral Flower"}],whispers:[{id:"010",name:"Back from Beyond"},{id:"011",name:"Drowned and Not"}]}};function L(e=null){const a=A(),t=e||b,s=[];return(a.aspects[t.bloodline]||[]).forEach(c=>{s.push({...c,source:t.bloodline,category:"Bloodline"})}),(a.aspects[t.origin]||[]).forEach(c=>{s.push({...c,source:t.origin,category:"Origin"})}),(a.aspects[t.post]||[]).forEach(c=>{s.push({...c,source:t.post,category:"Post"})}),s}function ne(e,a=null){const t=a||b;t.name=e}function re(e,a,t=null){const s=t||b;s.bloodline=e,s.selectedAspects=[],a()}function ce(e,a,t=null){const s=t||b;s.origin=e,s.selectedAspects=[],a()}function oe(e,a,t=null){const s=t||b;s.post=e,s.selectedAspects=[],a()}function le(e,a,t=null){const s=t||b;if(s.mode!=="creation"&&s.mode!=="advancement")return;const n=s.selectedAspects.findIndex(i=>i.id===e);if(n>=0)s.selectedAspects.splice(n,1);else{if(s.mode==="creation"&&s.selectedAspects.length>=y.aspects||s.mode==="advancement"&&s.selectedAspects.length>=y.maxAspectsAdvancement)return;const r=L(s).find(c=>c.source+"-"+c.name===e);r&&s.selectedAspects.push({id:e,...r,trackSize:r.track,damageStates:Array(r.track).fill("default")})}a()}function de(e,a,t,s=null){const n=s||b;if(n.mode!=="play")return;const i=n.selectedAspects.find(l=>l.id===e);if(!i)return;const r=["default","marked","burned"],c=i.damageStates[a],u=(r.indexOf(c)+1)%r.length;i.damageStates[a]=r[u],t()}function ue(e,a,t,s=null){const n=s||b;if(n.mode!=="advancement")return;const i=n.selectedAspects.find(c=>c.id===e);if(!i)return;const r=i.trackSize+a;r<1||r>5||(a>0?i.damageStates.push("default"):i.damageStates.pop(),i.trackSize=r,t())}function pe(e,a,t,s=null){const i=(s||b).selectedAspects.find(r=>r.id===e);i&&(i.name=a,i.description=t,i.customized=!0)}function me(e,a=null){const t=a||b,s=t.selectedAspects.find(c=>c.id===e);if(!s)return;const n=L(t),i=n.find(c=>c.source+"-"+c.name===e),r=i||n.find(c=>c.source===s.source);r&&(s.name=r.name,s.description=r.description,s.customized=!1)}function ve(e,a,t=null){const s=t||b;if(s.mode!=="creation")return;const n=s.selectedEdges.indexOf(e);if(n>=0)s.selectedEdges.splice(n,1);else{if(s.selectedEdges.length>=y.edges)return;s.selectedEdges.push(e)}a()}function ge(e,a,t,s=null){const n=s||b,i=n.skills[e]||0,r=Math.max(0,Math.min(n.mode==="creation"?2:3,i+a));if(n.mode==="creation"){const c=Object.values(n.skills).reduce((u,l)=>u+l,0),o=Object.entries(n.languages).filter(function(u){return u[0]!=="Low Sour"}).reduce((u,l)=>u+l[1],0);if(a>0&&c+o>=y.skillPoints)return}r===0?delete n.skills[e]:n.skills[e]=r,t()}function fe(e,a,t,s=null){const n=s||b;if(e==="Low Sour"&&n.mode==="creation")return;const i=n.languages[e]||0,r=Math.max(0,Math.min(n.mode==="creation"?2:3,i+a));if(n.mode==="creation"){const c=Object.values(n.skills).reduce((u,l)=>u+l,0),o=Object.entries(n.languages).filter(function(u){return u[0]!=="Low Sour"}).reduce((u,l)=>u+l[1],0);if(a>0&&c+o>=y.skillPoints)return}r===0&&e!=="Low Sour"?delete n.languages[e]:n.languages[e]=r,t()}function he(e,a,t=null){const s=t||b;s.drives[e]=a}function be(e,a,t=null){const s=t||b;s.mires[e].text=a}function ye(e,a,t,s=null){const n=s||b;a===1?n.mires[e].checkbox1=!n.mires[e].checkbox1:n.mires[e].checkbox2=!n.mires[e].checkbox2,t()}function ke(e,a=null){(a||b).milestones.push({id:Date.now().toString(),used:!1,name:"",scale:"Minor"}),e()}function xe(e,a,t=null){const n=(t||b).milestones.find(i=>i.id===e);n&&(n.name=a)}function Se(e,a,t,s=null){const i=(s||b).milestones.find(r=>r.id===e);i&&(i.scale=a,t())}function Ae(e,a,t=null){const n=(t||b).milestones.find(i=>i.id===e);n&&(n.used=!n.used,a())}function we(e,a,t=null){const s=t||b,n=s.milestones.findIndex(i=>i.id===e);n>=0&&(s.milestones.splice(n,1),a())}function Ce(e,a,t=null){(t||b).resources[e].push({id:Date.now().toString(),name:""}),a()}function $e(e,a,t,s=null){const i=(s||b).resources[e].find(r=>r.id===a);i&&(i.name=t)}function Ee(e,a,t,s=null){const n=s||b,i=n.resources[e].findIndex(r=>r.id===a);i>=0&&(n.resources[e].splice(i,1),t())}function Ie(e,a=null){const t=a||b,s=A();t.resources={charts:[],salvage:[],specimens:[],whispers:[]};const n=[t.bloodline,t.origin,t.post],i={charts:new Set,salvage:new Set,specimens:new Set,whispers:new Set};for(let r=0;r<n.length;r++){const c=n[r],o=s.startingResources[c];if(o){const u=["charts","salvage","specimens","whispers"];for(let l=0;l<u.length;l++){const m=u[l],g=o[m];if(g)for(let v=0;v<g.length;v++){const h=g[v];i[m].has(h)||(i[m].add(h),t.resources[m].push({id:Date.now().toString()+"-"+m+"-"+v+"-"+r,name:h}))}}}}e()}function Me(e,a,t=null){const s=t||b;s.mode=e,a()}function Pe(e,a=null){const t=a||b,s=A();t.name="Random Character",t.bloodline=s.bloodlines[Math.floor(Math.random()*s.bloodlines.length)],t.origin=s.origins[Math.floor(Math.random()*s.origins.length)],t.post=s.posts[Math.floor(Math.random()*s.posts.length)],t.selectedAspects=[],t.selectedEdges=[],t.skills={},t.languages={"Low Sour":3},t.milestones=[],t.drives=["","",""],t.mires=[{text:"",checkbox1:!1,checkbox2:!1},{text:"",checkbox1:!1,checkbox2:!1},{text:"",checkbox1:!1,checkbox2:!1}],t.resources={charts:[],salvage:[],specimens:[],whispers:[]};const i=L(t).slice().sort(()=>Math.random()-.5);for(let o=0;o<Math.min(4,i.length);o++){const u=i[o];t.selectedAspects.push({id:u.source+"-"+u.name,...u,trackSize:u.track,damageStates:Array(u.track).fill("default")})}const r=s.edges.slice().sort(()=>Math.random()-.5);t.selectedEdges=r.slice(0,3).map(o=>o.name);let c=y.skillPoints;for(;c>0;){const o=s.skills[Math.floor(Math.random()*s.skills.length)],u=t.skills[o]||0;u<2&&(t.skills[o]=u+1,c--)}e()}function w(){return b}function De(){return Date.now().toString(36)+Math.random().toString(36).substr(2)}function Ne(e="New Crew"){return{id:De(),crewName:e,activeShipId:null,activeCharacterIds:[],activeView:"character",activeCharacterId:null,created:Date.now(),lastModified:Date.now()}}function ze(){const e=localStorage.getItem("wildsea-session");if(e)try{return JSON.parse(e)}catch(a){console.error("Failed to load session:",a)}return null}function I(e){e.lastModified=Date.now(),localStorage.setItem("wildsea-session",JSON.stringify(e))}function G(e,a){e.activeCharacterIds.includes(a)||(e.activeCharacterIds.push(a),e.activeCharacterId===null&&(e.activeCharacterId=a,e.activeView="character"),I(e))}function je(e,a){const t=e.activeCharacterIds.indexOf(a);t>=0&&(e.activeCharacterIds.splice(t,1),e.activeCharacterId===a&&(e.activeCharacterId=e.activeCharacterIds[0]||null),I(e))}function X(e,a){e.activeShipId=a,I(e)}function B(e){e.activeShipId&&(e.activeView="ship",I(e))}function U(e,a){e.activeCharacterIds.includes(a)&&(e.activeCharacterId=a,e.activeView="character",I(e))}function Le(e=null){const a=e||w(),t=[];a.selectedAspects.length!==y.aspects&&t.push(`Please select exactly ${y.aspects} aspects`),a.selectedEdges.length!==y.edges&&t.push(`Please select exactly ${y.edges} edges`);const s=Object.values(a.skills).reduce((r,c)=>r+c,0),n=Object.entries(a.languages).filter(function(r){return r[0]!=="Low Sour"}).reduce((r,c)=>r+c[1],0);return s+n!==y.skillPoints&&t.push(`Please allocate all ${y.skillPoints} skill/language points (currently allocated: ${s+n})`),a.resources.charts.length+a.resources.salvage.length+a.resources.specimens.length+a.resources.whispers.length>y.resources&&t.push("A new character can have up to 6 starting resources"),{valid:t.length===0,errors:t}}function Re(){return Date.now().toString(36)+Math.random().toString(36).substr(2)}function Oe(e){const a=e.match(/\[(\d+)-Track\]/);return a?parseInt(a[1],10):0}function Te(e="New Ship"){return{id:Re(),mode:"creation",name:e,anticipatedCrewSize:3,additionalStakes:0,ratings:{Armour:1,Seals:1,Speed:1,Saws:1,Stealth:1,Tilt:1},ratingDamage:{Armour:[],Seals:[],Speed:[],Saws:[],Stealth:[],Tilt:[]},size:null,frame:null,hull:[],bite:[],engine:[],motifs:[],generalAdditions:[],bounteousAdditions:[],rooms:[],armaments:[],undercrew:{officers:[],gangs:[],packs:[]},undercrewDamage:{},cargo:[],passengers:[]}}function k(e){const a=localStorage.getItem(`wildsea-ship-${e}`);if(a)try{return JSON.parse(a)}catch(t){console.error(`Failed to load ship ${e}:`,t)}return null}function x(e){localStorage.setItem(`wildsea-ship-${e.id}`,JSON.stringify(e))}function Be(e,a,t){t.mode=e}function Ue(e,a){a.name=e}function Fe(e,a,t){t.anticipatedCrewSize=Math.max(1,parseInt(e)||1)}function Ge(e,a,t){t.additionalStakes=Math.max(0,parseInt(e)||0)}function He(e,a,t,s){if(["hull","bite","engine"].includes(e)){Array.isArray(s[e])||(s[e]=s[e]?[s[e]]:[]);const i=s[e].findIndex(r=>r.name===a.name);i>=0?s[e].splice(i,1):s[e].push(a)}else s[e]=a}function qe(e,a,t,s){Array.isArray(s[e])||(s[e]=s[e]?[s[e]]:[]);const n=s[e].findIndex(i=>i.name===a.name);n>=0?s[e].splice(n,1):s[e].push(a)}function Je(e,a,t,s){s.undercrew||(s.undercrew={officers:[],gangs:[],packs:[]}),Array.isArray(s.undercrew[e])||(s.undercrew[e]=[]);const n=s.undercrew[e].findIndex(i=>i.name===a.name);if(n>=0)s.undercrew[e].splice(n,1);else{const i=Oe(a.name),r={...a,track:i};s.undercrew[e].push(r)}}function H(e){let a=0;return e.size&&(a+=e.size.stakes),e.frame&&(a+=e.frame.stakes),e.hull&&Array.isArray(e.hull)&&e.hull.forEach(t=>a+=t.stakes),e.bite&&Array.isArray(e.bite)&&e.bite.forEach(t=>a+=t.stakes),e.engine&&Array.isArray(e.engine)&&e.engine.forEach(t=>a+=t.stakes),e.motifs&&Array.isArray(e.motifs)&&e.motifs.forEach(t=>a+=t.stakes),e.generalAdditions&&Array.isArray(e.generalAdditions)&&e.generalAdditions.forEach(t=>a+=t.stakes),e.bounteousAdditions&&Array.isArray(e.bounteousAdditions)&&e.bounteousAdditions.forEach(t=>a+=t.stakes),e.rooms&&Array.isArray(e.rooms)&&e.rooms.forEach(t=>a+=t.stakes),e.armaments&&Array.isArray(e.armaments)&&e.armaments.forEach(t=>a+=t.stakes),e.undercrew&&(e.undercrew.officers&&Array.isArray(e.undercrew.officers)&&e.undercrew.officers.forEach(t=>a+=t.stakes),e.undercrew.gangs&&Array.isArray(e.undercrew.gangs)&&e.undercrew.gangs.forEach(t=>a+=t.stakes),e.undercrew.packs&&Array.isArray(e.undercrew.packs)&&e.undercrew.packs.forEach(t=>a+=t.stakes)),a}function q(e){const a=6+e.anticipatedCrewSize*3,t=e.additionalStakes||0;return a+t}function Y(e){const a={Armour:1,Seals:1,Speed:1,Saws:1,Stealth:1,Tilt:1},t=s=>{s&&s.bonuses&&s.bonuses.forEach(n=>{a[n.rating]=(a[n.rating]||1)+n.value})};return t(e.size),t(e.frame),e.hull&&Array.isArray(e.hull)&&e.hull.forEach(t),e.bite&&Array.isArray(e.bite)&&e.bite.forEach(t),e.engine&&Array.isArray(e.engine)&&e.engine.forEach(t),e.motifs&&Array.isArray(e.motifs)&&e.motifs.forEach(t),e.generalAdditions&&Array.isArray(e.generalAdditions)&&e.generalAdditions.forEach(t),e.bounteousAdditions&&Array.isArray(e.bounteousAdditions)&&e.bounteousAdditions.forEach(t),e.rooms&&Array.isArray(e.rooms)&&e.rooms.forEach(t),e.armaments&&Array.isArray(e.armaments)&&e.armaments.forEach(t),e.undercrew&&(e.undercrew.officers&&Array.isArray(e.undercrew.officers)&&e.undercrew.officers.forEach(t),e.undercrew.gangs&&Array.isArray(e.undercrew.gangs)&&e.undercrew.gangs.forEach(t),e.undercrew.packs&&Array.isArray(e.undercrew.packs)&&e.undercrew.packs.forEach(t)),a}function Ve(e,a,t,s){s.ratingDamage[e]||(s.ratingDamage[e]=[]);const n=s.ratingDamage[e];(n[a]||"default")==="default"?n[a]="burned":n[a]="default"}function We(e,a,t,s){s.undercrewDamage||(s.undercrewDamage={}),s.undercrewDamage[e]||(s.undercrewDamage[e]=[]);const n=s.undercrewDamage[e];(n[a]||"default")==="default"?n[a]="burned":n[a]="default"}function _e(e,a){a.cargo||(a.cargo=[]),a.cargo.push({id:Date.now().toString(),name:""}),e()}function Ke(e,a,t){t.cargo||(t.cargo=[]);const s=t.cargo.find(n=>n.id===e);s&&(s.name=a)}function Xe(e,a,t){t.cargo||(t.cargo=[]);const s=t.cargo.findIndex(n=>n.id===e);s>=0&&(t.cargo.splice(s,1),a())}function Ye(e,a){a.passengers||(a.passengers=[]),a.passengers.push({id:Date.now().toString(),name:""}),e()}function Qe(e,a,t){t.passengers||(t.passengers=[]);const s=t.passengers.find(n=>n.id===e);s&&(s.name=a)}function Ze(e,a,t){t.passengers||(t.passengers=[]);const s=t.passengers.findIndex(n=>n.id===e);s>=0&&(t.passengers.splice(s,1),a())}function et(e){const t=JSON.stringify({version:"1.0",character:e},null,2),s=new Blob([t],{type:"application/json"}),n=URL.createObjectURL(s),i=document.createElement("a");i.href=n,i.download=(e.name||"character")+".json",document.body.appendChild(i),i.click(),document.body.removeChild(i),URL.revokeObjectURL(n)}function tt(e,a){const t=document.createElement("input");t.type="file",t.accept=".json",t.onchange=function(s){const n=s.target.files[0];if(!n)return;const i=new FileReader;i.onload=function(r){try{const c=JSON.parse(r.target.result);if(!c.version||!c.character){alert("Invalid character file format");return}const o=c.character;o.id=Date.now().toString(36)+Math.random().toString(36).substr(2),f(o),G(e,o.id),U(e,o.id),a(),alert("Character imported successfully!")}catch(c){alert("Error reading character file: "+c.message)}},i.readAsText(n)},t.click()}function at(e){const t=JSON.stringify({version:"1.0",ship:e},null,2),s=new Blob([t],{type:"application/json"}),n=URL.createObjectURL(s),i=document.createElement("a");i.href=n,i.download=(e.name||"ship")+".json",document.body.appendChild(i),i.click(),document.body.removeChild(i),URL.revokeObjectURL(n)}function st(e,a){const t=document.createElement("input");t.type="file",t.accept=".json",t.onchange=function(s){const n=s.target.files[0];if(!n)return;const i=new FileReader;i.onload=function(r){try{const c=JSON.parse(r.target.result);if(!c.version||!c.ship){alert("Invalid ship file format");return}const o=c.ship;o.id=Date.now().toString(36)+Math.random().toString(36).substr(2),x(o),X(e,o.id),B(e),a(),alert("Ship imported successfully!")}catch(c){alert("Error reading ship file: "+c.message)}},i.readAsText(n)},t.click()}function E(e){let a='<div style="display: flex; gap: 4px; padding-top: 4px; margin-bottom: 4px;">';for(let t=0;t<e;t++)a+='<div class="track-box small"></div>';return a+="</div>",a}function R(e,a){let t='<div style="display: flex; gap: 8px; align-items: center; padding-top: 4px; margin-bottom: 4px;">';t+=`<button data-action="expandAspectTrack" data-params='{"id":"`+a+`","delta":-1}' `,t+=e.trackSize<=1?"disabled ":"",t+='style="flex-shrink: 0; padding: 2px 8px; font-size: 14px;" class="bg-black">−</button>';for(let s=0;s<e.trackSize;s++){const n=s>=e.track;t+='<div class="track-box'+(n?" new":"")+'"></div>'}return t+=`<button data-action="expandAspectTrack" data-params='{"id":"`+a+`","delta":1}' `,t+=e.trackSize>=5?"disabled ":"",t+='style="flex-shrink: 0; padding: 2px 8px; font-size: 14px;" class="bg-black">+</button>',t+="</div>",t}function F(e=null,a=null){const t=a||A(),s=e||w(),n=s.mode==="creation",i=s.selectedEdges.length;if(n){let r="<div>";r+='<div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 16px;">',r+='<h2 class="section-header" style="margin: 0;">Edges</h2>',r+='<div class="budget-indicator">'+i+"/"+y.edges+"</div>",r+="</div>",r+='<div style="display: flex; flex-direction: column; gap: 12px;">';for(let c=0;c<t.edges.length;c++){const o=t.edges[c],u=s.selectedEdges.includes(o.name),l=!u&&i>=y.edges;r+='<div class="edge-card',u&&(r+=" selected"),l&&(r+=" disabled"),r+=`" data-action="toggleEdge" data-params='{"name":"`+o.name+`"}'>`,r+='<div class="aspect-name" style="margin-bottom: 4px;">'+o.name+"</div>",r+='<div class="edge-tagline" style="font-size: 12px; color: ',r+=u?"#9CA3AF":"#6B7280",r+=';">'+o.tagline+"</div>",r+="</div>"}return r+="</div></div>",r}else{let r='<div><h2 class="section-header">Edges</h2>';for(let c=0;c<s.selectedEdges.length;c++)r+='<div class="aspect-name" style="color: #111827; margin-bottom: 4px;">',r+=s.selectedEdges[c],r+="</div>";return r+="</div>",r}}function Q(e,a,t=null,s=null){const n=t||w(),i=s||A();if(n.mode==="creation"){const c=Object.values(n.skills).reduce(function(m,g){return m+g},0),o=Object.entries(n.languages).filter(function(m){return m[0]!=="Low Sour"}).reduce(function(m,g){return m+g[1]},0),u=c+o;let l='<div style="display: grid; grid-template-columns: 1fr 2fr; gap: 32px; margin-bottom: 40px;">';return l+=F(n,i),l+="<div>",l+='<div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 16px;">',l+='<h2 class="section-header" style="margin: 0;">Skills & Languages</h2>',l+='<div class="budget-indicator">'+u+"/"+y.skillPoints+"</div>",l+="</div>",l+='<div style="display: grid; grid-template-columns: 1fr 1fr; gap: 32px;">',l+=e(n,i),l+=a(n,i),l+="</div></div></div>",l}else{let c='<div style="display: grid; grid-template-columns: 1fr 1fr 1fr; gap: 32px; margin-bottom: 32px;">';return c+=F(n,i),c+=e(n,i),c+=a(n,i),c+="</div>",c}}function J(e=null,a=null){const t=a||A(),s=e||w(),n=s.mode==="creation";if(s.mode==="play"){let r='<div><h2 class="section-header">Skills</h2>';for(let c=0;c<t.skills.length;c++){const o=t.skills[c],u=s.skills[o]||0;r+='<div class="skill-row">',r+='<div class="skill-name">'+o+"</div>",r+='<div style="display: flex; gap: 4px;">';for(let l=0;l<3;l++)r+='<div class="track-box small',l<u&&(r+=" active"),r+='"></div>';r+="</div></div>"}return r+="</div>",r}else if(n){let r='<div style="display: flex; flex-direction: column; gap: 4px;">';r+='<h3 class="subsection-header" style="margin-bottom: 12px;">Skills</h3>';const c=Object.values(s.skills).reduce(function(l,m){return l+m},0),o=Object.entries(s.languages).filter(function(l){return l[0]!=="Low Sour"}).reduce(function(l,m){return l+m[1]},0),u=c+o;for(let l=0;l<t.skills.length;l++){const m=t.skills[l],g=s.skills[m]||0,v=g<2&&u<y.skillPoints;r+='<div class="flex-between" style="margin-bottom: 8px;">',r+='<div class="skill-name">'+m+"</div>",r+='<div style="display: flex; gap: 8px; align-items: center;">',r+=`<button data-action="adjustSkill" data-params='{"name":"`+m+`","delta":-1}'`,g===0&&(r+=" disabled"),r+=">−</button>";for(let h=0;h<3;h++)r+='<div class="track-box',h<g&&(r+=" active"),r+='"></div>';r+=`<button data-action="adjustSkill" data-params='{"name":"`+m+`","delta":1}'`,v||(r+=" disabled"),r+=">+</button>",r+="</div></div>"}return r+="</div>",r}else{let r='<div><h2 class="section-header">Skills</h2>';for(let c=0;c<t.skills.length;c++){const o=t.skills[c],u=s.skills[o]||0;r+='<div class="flex-between" style="margin-bottom: 8px;">',r+='<div class="skill-name">'+o+"</div>",r+='<div style="display: flex; gap: 8px; align-items: center;">',r+=`<button data-action="adjustSkill" data-params='{"name":"`+o+`","delta":-1}'`,u===0&&(r+=" disabled"),r+=">−</button>";for(let l=0;l<3;l++)r+='<div class="track-box',l<u&&(r+=" active"),r+='"></div>';r+=`<button data-action="adjustSkill" data-params='{"name":"`+o+`","delta":1}'`,u>=3&&(r+=" disabled"),r+=">+</button>",r+="</div></div>"}return r+="</div>",r}}function V(e=null,a=null){const t=a||A(),s=e||w(),n=s.mode==="creation";if(s.mode==="play"){let r='<div><h2 class="section-header">Languages</h2>';for(let c=0;c<t.languages.length;c++){const o=t.languages[c],u=s.languages[o]||0;r+='<div class="skill-row">',r+='<div class="skill-name">'+o+"</div>",r+='<div style="display: flex; gap: 4px;">';for(let l=0;l<3;l++)r+='<div class="track-box small',l<u&&(r+=" active"),r+='"></div>';r+="</div></div>"}return r+="</div>",r}else if(n){let r='<div style="display: flex; flex-direction: column; gap: 4px;">';r+='<h3 class="subsection-header" style="margin-bottom: 12px;">Languages</h3>';const c=Object.values(s.skills).reduce(function(l,m){return l+m},0),o=Object.entries(s.languages).filter(function(l){return l[0]!=="Low Sour"}).reduce(function(l,m){return l+m[1]},0),u=c+o;for(let l=0;l<t.languages.length;l++){const m=t.languages[l],g=s.languages[m]||0,v=m==="Low Sour",h=!v&&g<2&&u<y.skillPoints,C=!v&&g>0;r+='<div class="flex-between" style="margin-bottom: 8px;">',r+='<div class="skill-name">'+m+"</div>",r+='<div style="display: flex; gap: 8px; align-items: center;">',r+=`<button data-action="adjustLanguage" data-params='{"name":"`+m+`","delta":-1}'`,C||(r+=" disabled"),r+=">−</button>";for(let S=0;S<3;S++)r+='<div class="track-box',S<g&&(r+=" active"),r+='"></div>';r+=`<button data-action="adjustLanguage" data-params='{"name":"`+m+`","delta":1}'`,h||(r+=" disabled"),r+=">+</button>",r+="</div></div>"}return r+="</div>",r}else{let r='<div><h2 class="section-header">Languages</h2>';for(let c=0;c<t.languages.length;c++){const o=t.languages[c],u=s.languages[o]||0;r+='<div class="flex-between" style="margin-bottom: 8px;">',r+='<div class="skill-name">'+o+"</div>",r+='<div style="display: flex; gap: 8px; align-items: center;">',r+=`<button data-action="adjustLanguage" data-params='{"name":"`+o+`","delta":-1}'`,(u===0||o==="Low Sour")&&(r+=" disabled"),r+=">−</button>";for(let l=0;l<3;l++)r+='<div class="track-box',l<u&&(r+=" active"),r+='"></div>';r+=`<button data-action="adjustLanguage" data-params='{"name":"`+o+`","delta":1}'`,u>=3&&(r+=" disabled"),r+=">+</button>",r+="</div></div>"}return r+="</div>",r}}function Z(e=null){const a=e||w(),t=[{key:"charts",label:"Charts",placeholder:"Name your Chart...",singular:"Chart"},{key:"salvage",label:"Salvage",placeholder:"Name your Salvage...",singular:"Salvage"},{key:"specimens",label:"Specimens",placeholder:"Name your Specimen...",singular:"Specimen"},{key:"whispers",label:"Whispers",placeholder:"Name your Whisper...",singular:"Whisper"}],s=a.mode==="creation";let n='<div style="margin-bottom: 32px;">';s?(n+='<div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 12px;">',n+='<h2 class="section-header" style="margin: 0;">Resources</h2>',n+='<p>A new character may have up to 6 starting resources.</p> <button data-action="populateDefaultResources">Load Suggested Resources</button>',n+="</div>"):n+='<h2 class="section-header">Resources</h2>',n+='<div style="display: grid; grid-template-columns: repeat(4, 1fr); gap: 32px;">';for(let i=0;i<t.length;i++){const r=t[i],c=a.resources[r.key];n+="<div>",n+='<h3 class="subsection-header" style="margin-bottom: 12px;">'+r.label+"</h3>",n+='<div style="display: flex; flex-direction: column; gap: 12px;">';for(let u=0;u<c.length;u++){const l=c[u];n+='<div style="display: flex; gap: 8px; align-items: center;">',n+='<input type="text" ',n+='value="'+l.name+'" ',n+='placeholder="'+r.placeholder+'" ',n+='data-action="updateResourceName" ',n+=`data-params='{"type":"`+r.key+'","id":"'+l.id+`"}' `,n+='style="width: 100%;">',n+='<button data-action="removeResource" ',n+=`data-params='{"type":"`+r.key+'","id":"'+l.id+`"}' `,n+='style="flex-shrink: 0; border: 0;">✕</button>',n+="</div>"}const o=(c.length>0,"0");n+=`<button class="ghost" data-action="addResource" data-params='{"type":"`+r.key+`"}' style="width: 100%; margin-top: `+o+'px;">+ New '+r.singular+"</button>",n+="</div>",n+="</div>"}return n+="</div>",n+="</div>",n}function ee(e=null){const a=e||w();let t='<div><h2 class="section-header">Drives</h2>';t+='<div style="display: flex; flex-direction: column; gap: 8px;">';for(let s=0;s<a.drives.length;s++)t+='<input type="text" ',t+='value="'+a.drives[s]+'" ',t+='placeholder="Enter a drive..." ',t+='data-action="updateDrive" ',t+=`data-params='{"index":`+s+"}' ",t+='style="width: 100%;">';return t+="</div></div>",t}function te(e=null){const a=e||w(),t=a.mode==="play";let s='<div><h2 class="section-header">Mires</h2>';s+='<div style="display: flex; flex-direction: column; gap: 8px;">';for(let n=0;n<a.mires.length;n++){const i=a.mires[n];t?(s+='<div style="display: flex; gap: 10px; align-items: center;">',s+='<div style="width: 8px;"></div>',s+='<input type="checkbox" ',i.checkbox1&&(s+="checked "),s+='data-action="toggleMireCheckbox" ',s+=`data-params='{"index":`+n+`,"num":1}'>`,s+='<input type="checkbox" ',i.checkbox2&&(s+="checked "),s+='data-action="toggleMireCheckbox" ',s+=`data-params='{"index":`+n+`,"num":2}'>`,s+='<input type="text" ',s+='value="'+i.text+'" ',s+='placeholder="Enter a mire..." ',s+='data-action="updateMire" ',s+=`data-params='{"index":`+n+"}' ",s+='style="width: 100%;">',s+="</div>"):(s+='<input type="text" ',s+='value="'+i.text+'" ',s+='placeholder="Enter a mire..." ',s+='data-action="updateMire" ',s+=`data-params='{"index":`+n+"}' ",s+='style="width: 100%;">')}return s+="</div></div>",s}function it(e,a,t){const s=L(a),n=s.filter(o=>o.category==="Bloodline"),i=s.filter(o=>o.category==="Origin"),r=s.filter(o=>o.category==="Post"),c=a.selectedAspects.length;e.innerHTML=`
    <div style="padding: 20px; max-width: 1400px; margin: 0 auto; padding-bottom: 80px;">
        <div style="margin-bottom: 20px;">
        <label style="display: block; margin-bottom: 8px; font-weight: 600;">Character Name</label>
        <input type="text" value="${a.name}"
            data-action="onCharacterNameChange"
                placeholder="Enter name..."
                style="width: 300px; font-size: 16px;">
        </div>

        <div style="margin-bottom: 40px;">
        <h2 class="section-header">Core Elements</h2>
        <div style="display: grid; grid-template-columns: 1fr 1fr 1fr; gap: 16px;">
            <div>
            <label style="display: block; margin-bottom: 8px; font-weight: 600;">Bloodline</label>
            <select data-action="onBloodlineChange"
                    style="width: 100%; font-size: 16px;">
                ${t.bloodlines.map(o=>'<option value="'+o+'"'+(a.bloodline===o?" selected":"")+">"+o+"</option>").join("")}
            </select>
            </div>
            <div>
            <label style="display: block; margin-bottom: 8px; font-weight: 600;">Origin</label>
            <select data-action="onOriginChange"
                    style="width: 100%; font-size: 16px;">
                ${t.origins.map(o=>'<option value="'+o+'"'+(a.origin===o?" selected":"")+">"+o+"</option>").join("")}
            </select>
            </div>
            <div>
            <label style="display: block; margin-bottom: 8px; font-weight: 600;">Post</label>
            <select data-action="onPostChange"
                    style="width: 100%; font-size: 16px;">
                ${t.posts.map(o=>'<option value="'+o+'"'+(a.post===o?" selected":"")+">"+o+"</option>").join("")}
            </select>
            </div>
        </div>
        </div>

        <div style="margin-bottom: 40px;">
        <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 16px;">
            <h2 class="section-header" style="margin: 0;">Aspects</h2>
            <div class="budget-indicator">${c}/${y.aspects}</div>
        </div>
        <div class="grid-3col">
            <div class="flex-col-gap">
            <h3 class="subsection-header">${a.bloodline}</h3>
            ${n.map(o=>{const u=o.source+"-"+o.name,l=u.replace(/'/g,"\\'"),m=a.selectedAspects.some(v=>v.id===u),g=!m&&c>=y.aspects;return`
                <div class="aspect-card ${m?"selected":""} ${g?"disabled":""}"
                        data-action="toggleAspect" data-params='{"id":"${l}"}'>
                    ${E(o.track)}
                    <div class="split">
                    <div class="aspect-name" style="margin-bottom: 4px;">${o.name}</div>
                    <div class="aspect-meta">${o.source} ${o.type}</div>
                    </div>
                    <div class="aspect-description">${o.description}</div>
                </div>
                `}).join("")}
            </div>

            <div class="flex-col-gap">
            <h3 class="subsection-header">${a.origin}</h3>
            ${i.map(o=>{const u=o.source+"-"+o.name,l=u.replace(/'/g,"\\'"),m=a.selectedAspects.some(v=>v.id===u),g=!m&&c>=y.aspects;return`
                <div class="aspect-card ${m?"selected":""} ${g?"disabled":""}"
                        data-action="toggleAspect" data-params='{"id":"${l}"}'>
                    ${E(o.track)}
                    <div class="split">
                    <div class="aspect-name" style="margin-bottom: 4px;">${o.name}</div>
                    <div class="aspect-meta">${o.source} ${o.type}</div>
                    </div>
                    <div class="aspect-description">${o.description}</div>
                </div>
                `}).join("")}
            </div>

            <div class="flex-col-gap">
            <h3 class="subsection-header">${a.post}</h3>
            ${r.map(o=>{const u=o.source+"-"+o.name,l=u.replace(/'/g,"\\'"),m=a.selectedAspects.some(v=>v.id===u),g=!m&&c>=y.aspects;return`
                <div class="aspect-card ${m?"selected":""} ${g?"disabled":""}"
                        data-action="toggleAspect" data-params='{"id":"${l}"}'>
                    ${E(o.track)}
                    <div class="split">
                    <div class="aspect-name" style="margin-bottom: 4px;">${o.name}</div>
                    <div class="aspect-meta">${o.source} ${o.type}</div>
                    </div>
                    <div class="aspect-description">${o.description}</div>
                </div>
                `}).join("")}
            </div>
        </div>
        </div>
        <hr />

        ${Q(J,V,a,t)}
        <hr />

        ${Z(a)}
        <hr />

        <div style="margin-bottom: 32px;">
        <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 32px;">
            ${ee(a)}
            ${te(a)}
        </div>
        </div>
    </div>

    <div class="sticky-action-bar split">
        <button data-action="importCharacter">Import</button>
        <div>
        <button data-action="generateRandomCharacter">Generate Random Character</button>
        <button data-action="createCharacter" class="primary">Create Character</button>
        </div>
    </div>
    `}function ae(e=null){const a=e||w();let t='<div><h2 class="section-header">Milestones</h2>';a.milestones.length>0&&(t+='<div class="grid-milestone" style="margin-bottom: 8px;">',t+='<h3 class="subsection-header">Used</h3>',t+='<h3 class="subsection-header">Name</h3>',t+='<h3 class="subsection-header">Scale</h3>',t+="</div>");for(let n=0;n<a.milestones.length;n++){const i=a.milestones[n];t+='<div class="grid-milestone" style="margin-bottom: 8px;">',t+='<div style="display: flex; align-items: center; gap: 10px;">',t+='<div style="width: 34px;"></div>',t+='<input type="checkbox" ',i.used&&(t+="checked "),t+='data-action="toggleMilestoneUsed" ',t+=`data-params='{"id":"`+i.id+`"}'>`,t+="</div>",t+='<input type="text" ',t+='value="'+i.name+'" ',t+='placeholder="Enter milestone name..." ',i.used&&(t+="disabled "),t+='data-action="updateMilestoneName" ',t+=`data-params='{"id":"`+i.id+`"}' `,t+='style="width: 100%;">',t+="<select ",i.used&&(t+="disabled "),t+='data-action="updateMilestoneScale" ',t+=`data-params='{"id":"`+i.id+`"}' `,t+='style="width: 100%;">',t+='<option value="Minor"',i.scale==="Minor"&&(t+=" selected"),t+=">Minor</option>",t+='<option value="Major"',i.scale==="Major"&&(t+=" selected"),t+=">Major</option>",t+="</select>",t+="</div>"}const s=a.milestones.length>0?"12":"0";return t+='<button class="ghost" data-action="addMilestone" style="width: 100%; margin-top: '+s+'px;">+ New Milestone</button>',t+="</div>",t}function nt(e,a,t){e.innerHTML=`
    <div style="padding: 20px; max-width: 1400px; margin: 0 auto; padding-bottom: 80px;">
        <div style="margin-bottom: 32px; padding-bottom: 24px; border-bottom: 2px solid #E5E7EB;">
        <div style="display: flex; gap: 48px; align-items: baseline;">
            <div>
            <div class="char-label">Character Name</div>
            <div class="char-name-header">${a.name}</div>
            </div>
            <div>
            <div class="char-label">Bloodline</div>
            <div class="char-name-header">${a.bloodline}</div>
            </div>
            <div>
            <div class="char-label">Origin</div>
            <div class="char-name-header">${a.origin}</div>
            </div>
            <div>
            <div class="char-label">Post</div>
            <div class="char-name-header">${a.post}</div>
            </div>
        </div>
        </div>

        <div style="display: grid; grid-template-columns: 1fr 1fr 1fr 3fr; gap: 32px; margin-bottom: 32px;">
        ${F(a,t)}
        ${J(a,t)}
        ${V(a,t)}

        <div>
            <h2 class="section-header">Aspects</h2>
            ${a.selectedAspects.slice().sort((s,n)=>s.name.localeCompare(n.name)).map(s=>{let n='<div style="display: flex; gap: 8px; padding-top: 4px; flex-shrink: 0; width: 165px;">';for(let i=0;i<5;i++)if(i<s.trackSize){const r=s.damageStates[i],c=r==="marked"?"/":r==="burned"?"X":"";n+='<div class="track-box '+r+`" data-action="cycleAspectDamage" data-params='{"id":"`+s.id+'","index":'+i+`}' style="cursor: pointer;">`+c+"</div>"}else n+='<div style="width: 26px; height: 26px;"></div>';return n+="</div>",`
                <div style="margin-bottom: 8px; padding: 8px; border-radius: 2px;">
                <div style="display: flex; gap: 8px; align-items: flex-start;">
                    ${n}
                    <div style="flex: 1; min-width: 0;">
                    <div class="split">
                        <div class="aspect-name" style="margin-bottom: 4px;">${s.name}</div>
                        <div class="aspect-meta">${s.source} ${s.type}</div>
                    </div>
                    <div class="aspect-description">${s.description}</div>
                    </div>
                </div>
                </div>
            `}).join("")}
        </div>
        </div>
        <hr />
        ${Z(a)}
        <hr />
        <div style="margin-bottom: 32px;">
        <div style="display: grid; grid-template-columns: 1fr 1fr 1fr; gap: 32px;">
            ${ee(a)}
            ${te(a)}
            ${ae(a)}
        </div>
        </div>
    </div>

    <div class="sticky-action-bar split">
        <button data-action="exportCharacter">Export</button>
        <button data-action="setMode" data-params='{"mode":"advancement"}'>Advancement</button>
    </div>
    `}function rt(e,a=null){const t=a||e.selectedAspects[0]?.id||null;if(!t||e.selectedAspects.length===0)return"";const s=e.selectedAspects.find(o=>o.id===t);if(!s)return"";const n=s.id.replace(/'/g,"\\'");let i='<div class="modal-overlay" data-action="closeCustomizeModal">';i+='  <div class="modal-container">',i+='    <div class="modal-header">',i+='      <h2 class="modal-title">Customize Aspects</h2>',i+="    </div>",i+='    <div class="modal-body">',i+='      <div class="modal-aspect-dropdown">',i+='        <label for="modal-aspect-select">Select Aspect:</label>',i+='        <select id="modal-aspect-select" class="select-input" ',i+='                data-action="selectAspectInModal" style="width: 100%;">',e.selectedAspects.forEach(o=>{const u=o.id===t?" selected":"";i+=`          <option value="${o.id}"${u}>${o.name}</option>`}),i+="        </select>",i+="      </div>",i+='      <div class="modal-aspect-card">',i+=`        <div class="aspect-meta">${s.type} • ${s.category}</div>`;const r=s.name||"";i+='        <input type="text" ',i+='               class="aspect-name-input" ',i+='               id="modal-aspect-name" ',i+=`               value="${r.replace(/"/g,"&quot;")}" `,i+='               placeholder="Aspect Name" ',i+='               maxlength="250" />',i+='        <div class="modal-char-count">',i+=`          <span id="name-char-count">${r.length}</span>/250`,i+="        </div>",i+=R(s,n);const c=s.description||"";return i+="        <textarea ",i+='               class="aspect-description-textarea" ',i+='               id="modal-aspect-description" ',i+='               placeholder="Aspect Description" ',i+='               maxlength="800">',i+=c.replace(/</g,"&lt;").replace(/>/g,"&gt;"),i+="</textarea>",i+='        <div class="modal-char-count">',i+=`          <span id="description-char-count">${c.length}</span>/800`,i+="        </div>",i+="      </div>",i+="    </div>",i+='    <div class="modal-footer">',i+='      <div class="modal-footer-left">',i+='        <button data-action="resetAspectCustomization" ',i+=`                data-params='{"id":"${n}"}'>`,i+="          Reset Changes",i+="        </button>",i+="      </div>",i+='      <div class="modal-footer-right">',i+='        <button data-action="closeCustomizeModal">Cancel</button>',i+='        <button class="bg-black" data-action="saveAspectCustomization" ',i+=`                data-params='{"id":"${n}"}'>`,i+="          Save",i+="        </button>",i+="      </div>",i+="    </div>",i+="  </div>",i+="</div>",i}function ct(e,a,t,s=!1,n=null){const i=L(a),r=i.filter(l=>l.category==="Bloodline").sort((l,m)=>l.name.localeCompare(m.name)),c=i.filter(l=>l.category==="Origin").sort((l,m)=>l.name.localeCompare(m.name)),o=i.filter(l=>l.category==="Post").sort((l,m)=>l.name.localeCompare(m.name)),u=a.selectedAspects.length;e.innerHTML=`
    <div style="padding: 20px; max-width: 1400px; margin: 0 auto; padding-bottom: 80px;">
        <div style="margin-bottom: 32px; padding-bottom: 24px; border-bottom: 2px solid #E5E7EB;">
        <div style="display: flex; gap: 48px; align-items: baseline;">
            <div>
            <label style="display: block; margin-bottom: 8px; font-weight: 600;">Character Name</label>
            <input type="text" value="${a.name}"
                    data-action="onCharacterNameChange"
                    placeholder="Enter name..."
                    style="width: 300px; font-size: 16px;">
            </div>
            <div>
            <div class="char-label">Bloodline</div>
            <div class="char-name-header">${a.bloodline}</div>
            </div>
            <div>
            <div class="char-label">Origin</div>
            <div class="char-name-header">${a.origin}</div>
            </div>
            <div>
            <div class="char-label">Post</div>
            <div class="char-name-header">${a.post}</div>
            </div>
        </div>
        </div>

        <div style="margin-bottom: 40px;">
        <div class="flex-between" style="margin-bottom: 12px;">
            <h2 class="section-header" style="margin: 0;">Aspects</h2>
            <button data-action="openCustomizeModal" class="bg-black">Customize an Aspect</button>
        </div>
        <div class="grid-3col">
            <div class="flex-col-gap">
            <h3 class="subsection-header">${a.bloodline}</h3>
            ${r.map(l=>{const m=l.source+"-"+l.name,g=m.replace(/'/g,"\\'"),v=a.selectedAspects.find(P=>P.id===m),h=!!v,C=!h&&u>=y.maxAspectsAdvancement,S=h&&v?v.name:l.name,M=h&&v?v.description:l.description;return`
                <div class="aspect-card ${h?"selected":""} ${C?"disabled":""}"
                        data-action="toggleAspect" data-params='{"id":"${g}"}'
                        style="position: relative;">
                    ${h?R(v,g):E(l.track)}
                    <div class="split">
                    <div class="aspect-name" style="margin-bottom: 4px;">${S}</div>
                    <div class="aspect-meta">${l.source} ${l.type}</div>
                    </div>
                    <div class="aspect-description">${M}</div>
                </div>
                `}).join("")}
            </div>

            <div class="flex-col-gap">
            <h3 class="subsection-header">${a.origin}</h3>
            ${c.map(l=>{const m=l.source+"-"+l.name,g=m.replace(/'/g,"\\'"),v=a.selectedAspects.find(P=>P.id===m),h=!!v,C=!h&&u>=y.maxAspectsAdvancement,S=h&&v?v.name:l.name,M=h&&v?v.description:l.description;return`
                <div class="aspect-card ${h?"selected":""} ${C?"disabled":""}"
                        data-action="toggleAspect" data-params='{"id":"${g}"}'
                        style="position: relative;">
                    ${h?R(v,g):E(l.track)}
                    <div class="split">
                    <div class="aspect-name" style="margin-bottom: 4px;">${S}</div>
                    <div class="aspect-meta">${l.source} ${l.type}</div>
                    </div>
                    <div class="aspect-description">${M}</div>
                </div>
                `}).join("")}
            </div>

            <div class="flex-col-gap">
            <h3 class="subsection-header">${a.post}</h3>
            ${o.map(l=>{const m=l.source+"-"+l.name,g=m.replace(/'/g,"\\'"),v=a.selectedAspects.find(P=>P.id===m),h=!!v,C=!h&&u>=y.maxAspectsAdvancement,S=h&&v?v.name:l.name,M=h&&v?v.description:l.description;return`
                <div class="aspect-card ${h?"selected":""} ${C?"disabled":""}"
                        data-action="toggleAspect" data-params='{"id":"${g}"}'
                        style="position: relative;">
                    ${h?R(v,g):E(l.track)}
                    <div class="split">
                    <div class="aspect-name" style="margin-bottom: 4px;">${S}</div>
                    <div class="aspect-meta">${l.source} ${l.type}</div>
                    </div>
                    <div class="aspect-description">${M}</div>
                </div>
                `}).join("")}
            </div>
        </div>
        </div>
        <hr />

        ${Q(J,V,a,t)}
        <hr />

        <div style="margin-bottom: 32px;">
        ${ae(a)}
        </div>
    </div>

    <div class="sticky-action-bar" style="display: flex; justify-content: flex-end;">
        <button data-action="setMode" data-params='{"mode":"play"}' class="primary">Save Changes</button>
        <button data-action="setMode" data-params='{"mode":"play"}'>Cancel</button>
    </div>

    ${s?rt(a,n):""}
    `}function ot(e){let a='<div class="nav-bar split">';if(a+='<div style="display: flex; gap: 16px; align-items: center;">',e.activeShipId){const t=k(e.activeShipId),n=e.activeView==="ship"?"nav-button-active":"nav-button-inactive";a+='<button data-action="switchToShip" class="nav-button '+n+'">',a+=t&&t.name||"Ship",a+="</button>"}else a+='<button data-action="createNewShip" class="nav-button nav-button-inactive">+ New Ship</button>';if(a+="</div>",a+='<div style="display: flex; gap: 16px; align-items: center;">',e.activeCharacterIds.length>0)for(let t=0;t<e.activeCharacterIds.length;t++){const s=e.activeCharacterIds[t],n=j(s),i=e.activeView==="character"&&s===e.activeCharacterId;n&&(a+='<div class="nav-character-wrapper '+(i?"nav-button-active":"nav-button-inactive")+'">',a+=`<button data-action="switchCharacter" data-params='{"characterId":"`+s+`"}' `,a+='class="nav-character-label">',a+=n.name||"Unnamed Character",a+="</button>",a+=`<button data-action="removeCharacter" data-params='{"characterId":"`+s+`"}' `,a+='class="ship-cargo-remove" title="Remove from crew">',a+="✕",a+="</button>",a+="</div>")}return a+='<button data-action="createNewCharacter" class="nav-button nav-button-minor">',a+="+ New Character",a+="</button>",a+='<button data-action="importCharacter" class="nav-button nav-button-minor">',a+="↓ Import Character",a+="</button>",a+="</div>",a+="</div>",a}function lt(e){const a=Y(e);let t='<div class="ship-ratings-column" style="gap: 8px;">';return t+='<div class="ship-ratings-heading">RATINGS</div>',["Armour","Seals","Speed","Saws","Stealth","Tilt"].forEach(n=>{const i=a[n];t+='<div style="display: flex; justify-content: space-between; align-items: center; padding: 4px 8px; background: white; border-radius: 4px;">',t+=`<span class="ship-rating-name">${n}</span>`,t+=`<span style="font-size: 14px; font-weight: 700; color: #1F2937;">${i}</span>`,t+="</div>"}),t+="</div>",t}function dt(e,a,t){const s=t?"ship-card-selected":"",n=JSON.stringify({partType:a,part:e}).replace(/"/g,"&quot;");let i=`<div class="ship-card ${s}"
    data-action="selectShipPart"
    data-params="${n}"
  >`;return i+='<div class="ship-card-header">',i+=`<div class="ship-card-name">${e.name}</div>`,i+=`<div class="ship-card-stakes">${e.stakes} ${e.stakes===1?"Stake":"Stakes"}</div>`,i+="</div>",i+=`<div class="ship-card-description">${e.description}</div>`,e.bonuses&&e.bonuses.length>0&&(i+='<div class="ship-bonuses">',e.bonuses.forEach(r=>{const c=r.value>=0?"+":"";i+=`<span class="ship-bonus-pill">${c}${r.value} ${r.rating}</span>`}),i+="</div>"),e.specials&&e.specials.length>0&&(i+='<div class="ship-specials">',e.specials.forEach(r=>{i+=`<div class="ship-special-item">• ${r}</div>`}),i+="</div>"),i+="</div>",i}function ut(e,a,t){const n=["hull","bite","engine"].includes(a);let i='<div class="ship-parts-grid">';return e.forEach(r=>{let c=!1;n&&Array.isArray(t)?c=t.some(o=>o.name===r.name):!n&&t&&(c=t.name===r.name),i+=dt(r,a,c)}),i+="</div>",i}function pt(e,a,t="size"){const s=[{id:"size",label:"Size"},{id:"frame",label:"Frame"},{id:"hull",label:"Hull"},{id:"bite",label:"Bite"},{id:"engine",label:"Engine"}];let n='<div class="ship-content-column">';n+='<div class="ship-tabs-container">',s.forEach(o=>{const l=o.id===t?"ship-tab-active":"ship-tab-inactive";n+=`<button
      data-action="switchShipTab"
      data-params='{"tab":"${o.id}"}'
      class="ship-tab ${l}"
    >${o.label}</button>`}),n+="</div>",n+='<div class="ship-content-scrollable">';const i={size:"sizes",frame:"frames",hull:"hulls",bite:"bite",engine:"engines"},r=a.shipParts[i[t]]||[],c=e[t];return n+=ut(r,t,c),n+="</div>",n+="</div>",n}function mt(e,a,t="motifs"){const s=[{id:"motifs",label:"Motifs"},{id:"general",label:"General Additions"},{id:"bounteous",label:"Bounteous Additions"},{id:"rooms",label:"Rooms"},{id:"armaments",label:"Armaments"}];let n='<div class="ship-content-column">';n+='<div class="ship-tabs-container">',s.forEach(c=>{const u=c.id===t?"ship-tab-active":"ship-tab-inactive";n+=`<button
      data-action="switchShipTab"
      data-params='{"tab":"${c.id}"}'
      class="ship-tab ${u}"
    >${c.label}</button>`}),n+="</div>",n+='<div class="ship-content-scrollable">';const r={motifs:{key:"motifs",shipProp:"motifs"},general:{key:"generalAdditions",shipProp:"generalAdditions"},bounteous:{key:"bounteousAdditions",shipProp:"bounteousAdditions"},rooms:{key:"rooms",shipProp:"rooms"},armaments:{key:"armaments",shipProp:"armaments"}}[t];if(r){const c=a.shipParts[r.key]||[],o=e[r.shipProp]||[];n+=vt(c,r.shipProp,o)}return n+="</div>",n+="</div>",n}function vt(e,a,t){let s='<div class="ship-parts-grid">';return e.forEach(n=>{const i=Array.isArray(t)&&t.some(r=>r.name===n.name);s+=gt(n,a,i)}),s+="</div>",s}function gt(e,a,t){const s=t?"ship-card-selected":"",n=JSON.stringify({fittingType:a,fitting:e}).replace(/"/g,"&quot;");let i=`<div class="ship-card ${s}"
    data-action="selectShipFitting"
    data-params="${n}"
  >`;return i+='<div class="ship-card-header">',i+=`<div class="ship-card-name">${e.name}</div>`,i+=`<div class="ship-card-stakes">${e.stakes} ${e.stakes===1?"Stake":"Stakes"}</div>`,i+="</div>",i+=`<div class="ship-card-description">${e.description}</div>`,e.bonuses&&e.bonuses.length>0&&(i+='<div class="ship-bonuses">',e.bonuses.forEach(r=>{const c=r.value>=0?"+":"";i+=`<span class="ship-bonus-pill">${c}${r.value} ${r.rating}</span>`}),i+="</div>"),e.specials&&e.specials.length>0&&(i+='<div class="ship-specials">',e.specials.forEach(r=>{i+=`<div class="ship-special-item">• ${r}</div>`}),i+="</div>"),i+="</div>",i}function ft(e,a,t="officers"){const s=[{id:"officers",label:"Officers"},{id:"gangs",label:"Gangs"},{id:"packs",label:"Packs"}];let n='<div class="ship-content-column">';n+='<div class="ship-tabs-container">',s.forEach(o=>{const l=o.id===t?"ship-tab-active":"ship-tab-inactive";n+=`<button
      data-action="switchShipTab"
      data-params='{"tab":"${o.id}"}'
      class="ship-tab ${l}"
    >${o.label}</button>`}),n+="</div>",n+='<div class="ship-content-scrollable">';const r=(a.shipParts.undercrew||{})[t]||[],c=e.undercrew?.[t]||[];return n+=ht(r,t,c),n+="</div>",n+="</div>",n}function ht(e,a,t){let s='<div class="ship-parts-grid">';return e.forEach(n=>{const i=Array.isArray(t)&&t.some(r=>r.name===n.name);s+=bt(n,a,i)}),s+="</div>",s}function bt(e,a,t){const s=t?"ship-card-selected":"",n=JSON.stringify({undercrewType:a,undercrew:e}).replace(/"/g,"&quot;");let i=`<div class="ship-card ${s}"
    data-action="selectShipUndercrew"
    data-params="${n}"
  >`;return i+='<div class="ship-card-header">',i+=`<div class="ship-card-name">${e.name}</div>`,i+=`<div class="ship-card-stakes">${e.stakes} ${e.stakes===1?"Stake":"Stakes"}</div>`,i+="</div>",i+=`<div class="ship-card-description">${e.description}</div>`,e.bonuses&&e.bonuses.length>0&&(i+='<div class="ship-bonuses">',e.bonuses.forEach(r=>{const c=r.value>=0?"+":"";i+=`<span class="ship-bonus-pill">${c}${r.value} ${r.rating}</span>`}),i+="</div>"),e.specials&&e.specials.length>0&&(i+='<div class="ship-specials">',e.specials.forEach(r=>{i+=`<div class="ship-special-item">• ${r}</div>`}),i+="</div>"),i+="</div>",i}function yt(e){let a='<div class="ship-inventory-column" style="min-width: 250px; max-width: 250px;">';a+=T("DESIGN ELEMENTS",[{label:"Size",items:e.size?[e.size]:[],required:!0},{label:"Frame",items:e.frame?[e.frame]:[],required:!0},{label:"Hull",items:e.hull||[],required:!0},{label:"Bite",items:e.bite||[],required:!0},{label:"Engine",items:e.engine||[],required:!0}]),a+=T("FITTINGS",[{label:"Motifs",items:e.motifs||[]},{label:"General Additions",items:e.generalAdditions||[]},{label:"Bounteous Additions",items:e.bounteousAdditions||[]},{label:"Rooms",items:e.rooms||[]},{label:"Armaments",items:e.armaments||[]}]);const t=[];e.undercrew&&(e.undercrew.officers&&e.undercrew.officers.length>0&&t.push({label:"Officers",items:e.undercrew.officers}),e.undercrew.gangs&&e.undercrew.gangs.length>0&&t.push({label:"Gangs",items:e.undercrew.gangs}),e.undercrew.packs&&e.undercrew.packs.length>0&&t.push({label:"Packs",items:e.undercrew.packs})),a+=T("UNDERCREW",t);const s=H(e),n=q(e),i=s>n?"#EF4444":s===n?"#10B981":"#1F2937";return a+='<div style="padding-top: 16px; border-top: 2px solid #D1D5DB;">',a+='<div style="display: flex; justify-content: space-between; align-items: baseline;">',a+='<span style="font-size: 12px; font-weight: 600; color: #374151;">STAKES</span>',a+=`<span style="font-size: 14px; font-weight: 700; color: ${i};">${s} / ${n}</span>`,a+="</div>",a+="</div>",a+="</div>",a}function T(e,a){let t='<div style="margin-bottom: 24px;">';return t+=`<div class="ship-ratings-heading">${e}</div>`,a.forEach(s=>{(s.required||s.items.length>0)&&(t+=`<div style="font-size: 10px; font-weight: 600; color: #9CA3AF; text-transform: uppercase; margin-top: 8px; margin-bottom: 4px;">${s.label}</div>`),s.items.length>0?s.items.forEach(n=>{t+=kt(n)}):s.required&&(t+='<div style="font-size: 12px; color: #EF4444; font-weight: 600; padding: 2px 0;">REQUIRED</div>')}),t+="</div>",t}function kt(e){return`<div style="display: flex; justify-content: space-between; align-items: baseline; padding: 2px 0; font-size: 12px; color: #374151;">
    <span style="flex: 1;">${e.name}</span>
    <span style="font-size: 10px; color: #6B7280; margin-left: 8px;">${e.stakes}</span>
  </div>`}function xt(e,a,t,s="size",n="design"){H(a),q(a);let i='<div class="ship-main-container">';i+='<div class="ship-top-bar">',i+='<div class="ship-top-bar-controls">',i+='<div class="ship-control-group">',i+='<label class="ship-name-label">Name:</label>',i+=`<input type="text" value="${a.name||""}"
    data-action="updateShipName"
    placeholder="Enter ship name..."
    class="ship-input"
  />`,i+="</div>",i+='<div class="ship-control-group">',i+='<label class="ship-control-label">Anticipated Crew Size:</label>',i+=`<input type="number" min="1" max="20" value="${a.anticipatedCrewSize}"
    data-action="updateAnticipatedCrewSize"
    class="ship-input-small"
  />`,i+="</div>",i+='<div class="ship-control-group">',i+='<label class="ship-control-label">Additional Stakes:</label>',i+=`<input type="number" min="0" value="${a.additionalStakes||0}"
    data-action="updateAdditionalStakes"
    class="ship-input-small"
  />`,i+="</div>",i+="</div>",i+='<div class="ship-wizard-buttons">',[{id:"design",label:"Ship Design"},{id:"fittings",label:"Fittings"},{id:"undercrew",label:"Undercrew"}].forEach(c=>{const u=c.id===n?"ship-wizard-button-active":"ship-wizard-button-inactive";i+=`<button data-action="switchWizardStage" data-params='{"stage":"${c.id}"}'
      class="ship-wizard-button ${u}"
    >${c.label}</button>`}),i+="</div>",i+="</div>",i+='<div class="ship-content-row">',i+=lt(a),i+=yt(a),n==="design"?i+=pt(a,t,s):n==="fittings"?i+=mt(a,t,s):n==="undercrew"&&(i+=ft(a,t,s)),i+="</div>",i+='<div class="sticky-action-bar split">',i+='<button data-action="importShip">Import Ship</button>',i+='<button data-action="createShip" class="primary">Create Ship</button>',i+="</div>",i+="</div>",e.innerHTML=i}function St(e){const a=Y(e);let t='<div class="ship-ratings-column">';t+='<div class="ship-ratings-heading">RATINGS</div>',["Armour","Seals","Speed","Saws","Stealth","Tilt"].forEach(u=>{const l=a[u],m=e.ratingDamage[u]||[];t+='<div class="ship-rating-item">',t+=`<div class="ship-rating-name">${u}</div>`,t+='<div class="ship-rating-track">';for(let g=0;g<l;g++){const v=m[g]==="burned"?"burned":"default";t+=`<div class="track-box ${v}" data-action="cycleRatingDamage" data-params='{"rating":"${u}","index":${g}}' style="cursor: pointer;">${v==="burned"?"X":""}</div>`}t+="</div>",t+="</div>"});const n=H(e),i=q(e),r=6+e.anticipatedCrewSize*3,c=e.additionalStakes||0,o=i-n;return t+='<div class="ship-stakes-section">',t+='<div class="ship-ratings-heading">STAKES</div>',t+='<div class="ship-stakes-list">',t+=`<div class="ship-stakes-row"><span class="ship-stakes-label">Original:</span><span class="ship-stakes-value">${r}</span></div>`,t+=`<div class="ship-stakes-row"><span class="ship-stakes-label">Additional:</span><span class="ship-stakes-value">${c}</span></div>`,t+=`<div class="ship-stakes-row"><span class="ship-stakes-label">Spent:</span><span class="ship-stakes-value">${n}</span></div>`,t+=`<div class="ship-stakes-row-total"><span class="ship-stakes-label-bold">Available:</span><span class="ship-stakes-value-bold">${o}</span></div>`,t+="</div>",t+="</div>",t+="</div>",t}function At(e){const a=e.cargo||[];let t="<div>";t+='<h2 class="section-header">Cargo</h2>',t+='<div style="display: flex; flex-direction: column; gap: 12px;">';for(let s=0;s<a.length;s++){const n=a[s];t+='<div class="ship-cargo-item">',t+='<input type="text" ',t+='value="'+n.name+'" ',t+='placeholder="Name your cargo..." ',t+='data-action="updateCargoName" ',t+=`data-params='{"id":"`+n.id+`"}' `,t+='class="ship-cargo-input">',t+='<button data-action="removeCargo" ',t+=`data-params='{"id":"`+n.id+`"}' `,t+='class="ship-cargo-remove">✕</button>',t+="</div>"}return t+='<button class="ship-add-button" data-action="addCargo" style="width: 100%;">+ New Cargo</button>',t+="</div>",t+="</div>",t}function wt(e){const a=e.passengers||[];let t="<div>";t+='<h2 class="section-header">Passengers</h2>',t+='<div style="display: flex; flex-direction: column; gap: 12px;">';for(let s=0;s<a.length;s++){const n=a[s];t+='<div class="ship-cargo-item">',t+='<input type="text" ',t+='value="'+n.name+'" ',t+='placeholder="Name your passenger..." ',t+='data-action="updatePassengerName" ',t+=`data-params='{"id":"`+n.id+`"}' `,t+='class="ship-cargo-input">',t+='<button data-action="removePassenger" ',t+=`data-params='{"id":"`+n.id+`"}' `,t+='class="ship-cargo-remove">✕</button>',t+="</div>"}return t+='<button class="ship-add-button" data-action="addPassenger" style="width: 100%;">+ New Passenger</button>',t+="</div>",t+="</div>",t}function $(e,a=!1,t=null){let s='<div class="ship-card">';if(a&&t){const n=e.track||0,i=t.undercrewDamage?.[e.name]||[];s+='<div class="ship-rating-track" style="margin-bottom: 12px;">';for(let r=0;r<n;r++){const c=i[r]==="burned"?"burned":"default",o=c==="burned"?"X":"",u=e.name.replace(/"/g,"&quot;");s+=`<div class="track-box ${c}" data-action="cycleUndercrewDamage" data-params='{"undercrewName":"${u}","index":${r}}' style="cursor: pointer;">${o}</div>`}s+="</div>"}return s+='<div class="ship-card-header">',s+=`<div class="ship-card-name">${e.name}</div>`,s+=`<div class="ship-card-stakes">${e.stakes} ${e.stakes===1?"Stake":"Stakes"}</div>`,s+="</div>",s+=`<div class="ship-card-description">${e.description}</div>`,e.bonuses&&e.bonuses.length>0&&(s+='<div class="ship-bonuses">',e.bonuses.forEach(n=>{const i=n.value>=0?"+":"";s+=`<span class="ship-bonus-pill">${i}${n.value} ${n.rating}</span>`}),s+="</div>"),e.specials&&e.specials.length>0&&(s+='<div class="ship-specials">',e.specials.forEach(n=>{s+=`<div class="ship-special-item">• ${n}</div>`}),s+="</div>"),s+="</div>",s}function Ct(e){let a='<div class="ship-play-container">';a+='<div class="ship-three-col-grid">',a+="<div>",a+='<h2 class="section-header">Design Elements</h2>',a+='<div class="ship-card-list">',e.size&&(a+=$(e.size)),e.frame&&(a+=$(e.frame)),e.hull&&Array.isArray(e.hull)&&e.hull.forEach(i=>{a+=$(i)}),e.bite&&Array.isArray(e.bite)&&e.bite.forEach(i=>{a+=$(i)}),e.engine&&Array.isArray(e.engine)&&e.engine.forEach(i=>{a+=$(i)}),a+="</div>",a+="</div>",a+="<div>",a+='<h2 class="section-header">Fittings</h2>';const t=[];[{key:"motifs",label:"Motifs"},{key:"generalAdditions",label:"General Additions"},{key:"bounteousAdditions",label:"Bounteous Additions"},{key:"rooms",label:"Rooms"},{key:"armaments",label:"Armaments"}].forEach(i=>{e[i.key]&&Array.isArray(e[i.key])&&e[i.key].length>0&&t.push(...e[i.key])}),a+='<div class="ship-fittings-grid">',t.forEach(i=>{a+=$(i)}),a+="</div>",a+="</div>",a+="<div>",a+='<h2 class="section-header">Undercrew</h2>';const n=[];return e.undercrew&&(e.undercrew.officers&&Array.isArray(e.undercrew.officers)&&n.push(...e.undercrew.officers),e.undercrew.gangs&&Array.isArray(e.undercrew.gangs)&&n.push(...e.undercrew.gangs),e.undercrew.packs&&Array.isArray(e.undercrew.packs)&&n.push(...e.undercrew.packs)),a+='<div class="ship-card-list">',n.length>0&&n.forEach(i=>{a+=$(i,!0,e)}),a+="</div>",a+="</div>",a+="</div>",a+='<hr class="ship-separator" />',a+='<div class="ship-two-col-grid">',a+=At(e),a+=wt(e),a+="</div>",a+="</div>",a}function $t(e,a,t){let s='<div class="ship-main-container" style="height: calc(100vh - 60px);">';s+='<div class="ship-content-row">',s+=St(a),s+=Ct(a),s+="</div>",s+='<div class="sticky-action-bar split">',s+='<button data-action="exportShip">Export Ship</button>',s+=`<button data-action="setShipMode" data-params='{"mode":"creation"}'>Ship Drydock</button>`,s+="</div>",s+="</div>",e.innerHTML=s}function Et(e,a,t){let s='<div style="display: flex; flex-direction: column; height: calc(100vh - 60px);">';s+='<div style="padding: 40px; text-align: center;">',s+='<h2 style="color: #1F2937; margin-bottom: 16px;">Ship Upgrade Mode</h2>',s+='<p style="color: #6B7280;">Upgrade mode UI coming soon...</p>',s+="</div>",s+='<div class="sticky-action-bar" style="display: flex; justify-content: flex-end;">',s+='<button data-action="saveShipUpgrade" class="primary">Save Changes</button>',s+=`<button data-action="setShipMode" data-params='{"mode":"play"}'>Cancel</button>`,s+="</div>",s+="</div>",e.innerHTML=s}let d=null,D="size",N="design",O=!1,z=null;function p(){const e=document.getElementById("app");if(!d){e.innerHTML='<div style="padding: 20px;">No session found. Reloading...</div>';return}const a=ot(d);if(d.activeView==="ship"&&d.activeShipId){const i=k(d.activeShipId);if(!i){e.innerHTML=a+'<div style="padding: 20px; color: red;">Error: Could not load ship.</div>';return}const r=document.createElement("div"),c=A();i.mode==="creation"?xt(r,i,c,D,N):i.mode==="play"?$t(r,i):i.mode==="upgrade"&&Et(r),e.innerHTML=a+r.innerHTML;return}if(!d.activeCharacterId){e.innerHTML=a+'<div style="padding: 20px;">No active character. Please create or import a character.</div>';return}const t=j(d.activeCharacterId);if(!t){e.innerHTML=a+'<div style="padding: 20px; color: red;">Error: Could not load active character.</div>';return}const s=document.createElement("div"),n=A();t.mode==="creation"?it(s,t,n):t.mode==="play"?nt(s,t,n):t.mode==="advancement"&&ct(s,t,n,O,z),e.innerHTML=a+s.innerHTML}function It(){if(!d||!d.activeCharacterId)return;const e=j(d.activeCharacterId);if(!e)return;const a=Le(e);if(!a.valid){alert(a.errors[0]);return}e.mode="play",f(e),p()}function Mt(){const e=document.getElementById("app");e.addEventListener("click",function(a){let t=a.target;for(;t&&t!==e;){const s=t.getAttribute("data-action");if(s){const n=t.getAttribute("data-params"),i=n?n.replace(/&quot;/g,'"'):"{}",r=i?JSON.parse(i):{},c=d&&d.activeCharacterId?j(d.activeCharacterId):null;switch(s){case"toggleAspect":c&&(le(r.id,p,c),f(c),p());break;case"toggleEdge":c&&(ve(r.name,p,c),f(c),p());break;case"adjustSkill":c&&(ge(r.name,r.delta,p,c),f(c),p());break;case"adjustLanguage":c&&(fe(r.name,r.delta,p,c),f(c),p());break;case"cycleAspectDamage":a.stopPropagation(),c&&(de(r.id,r.index,p,c),f(c),p());break;case"expandAspectTrack":a.stopPropagation(),c&&(ue(r.id,r.delta,p,c),f(c),p());break;case"addMilestone":c&&(ke(p,c),f(c),p());break;case"toggleMilestoneUsed":c&&(Ae(r.id,p,c),f(c),p());break;case"deleteMilestone":c&&(we(r.id,p,c),f(c),p());break;case"addResource":c&&(Ce(r.type,p,c),f(c),p());break;case"removeResource":c&&(Ee(r.type,r.id,p,c),f(c),p());break;case"populateDefaultResources":c&&(Ie(p,c),f(c),p());break;case"generateRandomCharacter":c&&(Pe(p,c),f(c),p());break;case"createCharacter":It();break;case"setMode":c&&(Me(r.mode,p,c),f(c),p());break;case"exportCharacter":c&&et(c);break;case"importCharacter":tt(d,p);break;case"toggleMireCheckbox":c&&(ye(r.index,r.num,p,c),f(c),p());break;case"switchCharacter":d&&r.characterId&&(U(d,r.characterId),p());break;case"removeCharacter":d&&r.characterId&&confirm("Remove this character from the crew? The character data will be deleted.")&&(je(d,r.characterId),ie(r.characterId),p());break;case"createNewCharacter":if(d){const o=K();f(o),G(d,o.id),U(d,o.id),p()}break;case"createNewShip":if(d){const o=Te();x(o),X(d,o.id),B(d),p()}break;case"switchToShip":d&&(B(d),p());break;case"setShipMode":if(d&&d.activeShipId){const o=k(d.activeShipId);o&&(Be(r.mode,p,o),x(o),p())}break;case"switchShipTab":D=r.tab,p();break;case"switchWizardStage":N=r.stage,N==="design"?D="size":N==="fittings"?D="motifs":N==="undercrew"&&(D="officers"),p();break;case"selectShipPart":if(d&&d.activeShipId){const o=k(d.activeShipId);o&&(He(r.partType,r.part,p,o),x(o),p())}break;case"selectShipFitting":if(d&&d.activeShipId){const o=k(d.activeShipId);o&&(qe(r.fittingType,r.fitting,p,o),x(o),p())}break;case"selectShipUndercrew":if(d&&d.activeShipId){const o=k(d.activeShipId);o&&(Je(r.undercrewType,r.undercrew,p,o),x(o),p())}break;case"importShip":d&&st(d,p);break;case"exportShip":if(d&&d.activeShipId){const o=k(d.activeShipId);o&&at(o)}break;case"createShip":if(d&&d.activeShipId){const o=k(d.activeShipId);if(o){if(!(o.size&&o.frame&&Array.isArray(o.hull)&&o.hull.length>0&&Array.isArray(o.bite)&&o.bite.length>0&&Array.isArray(o.engine)&&o.engine.length>0)){alert("Please select all required ship design elements (Size, Frame, Hull, Bite, and Engine)");return}o.mode="play",x(o),p()}}break;case"saveShipUpgrade":if(d&&d.activeShipId){const o=k(d.activeShipId);o&&(o.mode="play",x(o),p())}break;case"cycleRatingDamage":if(a.stopPropagation(),d&&d.activeShipId){const o=k(d.activeShipId);o&&(Ve(r.rating,r.index,p,o),x(o),p())}break;case"cycleUndercrewDamage":if(a.stopPropagation(),d&&d.activeShipId){const o=k(d.activeShipId);o&&(We(r.undercrewName,r.index,p,o),x(o),p())}break;case"addCargo":if(d&&d.activeShipId){const o=k(d.activeShipId);o&&(_e(p,o),x(o),p())}break;case"removeCargo":if(d&&d.activeShipId){const o=k(d.activeShipId);o&&(Xe(r.id,p,o),x(o),p())}break;case"addPassenger":if(d&&d.activeShipId){const o=k(d.activeShipId);o&&(Ye(p,o),x(o),p())}break;case"removePassenger":if(d&&d.activeShipId){const o=k(d.activeShipId);o&&(Ze(r.id,p,o),x(o),p())}break;case"openCustomizeModal":O=!0,z=null,p();break;case"closeCustomizeModal":a.target.classList&&a.target.classList.contains("modal-overlay")&&(O=!1,z=null,p());break;case"selectAspectInModal":break;case"saveAspectCustomization":if(c){const o=document.getElementById("modal-aspect-name"),u=document.getElementById("modal-aspect-description");if(!o||!u)break;const l=o.value.trim(),m=u.value.trim();if(!l||l.length===0){alert("Aspect name is required");break}if(l.length>250){alert("Aspect name must be 250 characters or less");break}if(!m||m.length===0){alert("Aspect description is required");break}if(m.length>800){alert("Aspect description must be 800 characters or less");break}pe(r.id,l,m,c),f(c),O=!1,z=null,p()}break;case"resetAspectCustomization":c&&r.id&&confirm("Reset this aspect to its original name and description?")&&(me(r.id,c),f(c),p());break}return}t=t.parentElement}}),e.addEventListener("change",function(a){const t=a.target,s=t.getAttribute("data-action");if(!s)return;const n=t.getAttribute("data-params"),i=n?JSON.parse(n):{};if(s==="updateShipName"){if(d&&d.activeShipId){const c=k(d.activeShipId);c&&(Ue(t.value,c),x(c))}return}if(s==="updateAnticipatedCrewSize"){if(d&&d.activeShipId){const c=k(d.activeShipId);c&&(Fe(t.value,p,c),x(c),p())}return}if(s==="updateAdditionalStakes"){if(d&&d.activeShipId){const c=k(d.activeShipId);c&&(Ge(t.value,p,c),x(c),p())}return}if(s==="updateCargoName"){if(d&&d.activeShipId){const c=k(d.activeShipId);c&&(Ke(i.id,t.value,c),x(c))}return}if(s==="updatePassengerName"){if(d&&d.activeShipId){const c=k(d.activeShipId);c&&(Qe(i.id,t.value,c),x(c))}return}const r=d&&d.activeCharacterId?j(d.activeCharacterId):null;if(r)switch(s){case"onCharacterNameChange":ne(t.value,r),f(r);break;case"onBloodlineChange":re(t.value,p,r),f(r),p();break;case"onOriginChange":ce(t.value,p,r),f(r),p();break;case"onPostChange":oe(t.value,p,r),f(r),p();break;case"updateDrive":he(i.index,t.value,r),f(r);break;case"updateMire":be(i.index,t.value,r),f(r);break;case"updateMilestoneName":xe(i.id,t.value,r),f(r);break;case"updateMilestoneScale":Se(i.id,t.value,p,r),f(r),p();break;case"updateResourceName":$e(i.type,i.id,t.value,r),f(r);break;case"selectAspectInModal":z=t.value,p();break}}),e.addEventListener("input",function(a){const t=a.target;if(t.id==="modal-aspect-name"){const s=document.getElementById("name-char-count");if(s){s.textContent=t.value.length;const n=s.parentElement;t.value.length>250?n.classList.add("over-limit"):n.classList.remove("over-limit")}}if(t.id==="modal-aspect-description"){const s=document.getElementById("description-char-count");if(s){s.textContent=t.value.length;const n=s.parentElement;t.value.length>800?n.classList.add("over-limit"):n.classList.remove("over-limit")}}})}async function Pt(){if(!await se()){document.getElementById("app").innerHTML='<div style="padding: 20px; color: red;">Failed to load game data. Check console for errors.</div>';return}if(d=ze(),!d){d=Ne("My Crew");const a=K();f(a),G(d,a.id),I(d)}Mt(),p()}Pt();
